{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "CidrBlock"
        },
        "EnableDnsHostnames": true
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "8218a9d8-4231-4fc6-adda-f8995848a4a8"
        }
      }
    },
    "Ec2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EC2 security group",
        "VpcId": {
          "Ref": "Vpc"
        },
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "udp",
            "FromPort": 1194,
            "ToPort": 1194
          }
        ]
      }
    },
    "PrimaryInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "SecurityGroupIds": [
          {
            "Ref": "Ec2SecurityGroup"
          }
        ],
        "ImageId": {
          "Ref": "ImageId"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SubnetId": {
          "Ref": "PrimarySubnet"
        }
      }
    },
    "PrimarySubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc"
        },
        "CidrBlock": {
          "Ref": "PrimaryCidrBlock"
        },
        "AvailabilityZone": {
          "Ref": "PrimaryAvailabilityZone"
        },
        "MapPublicIpOnLaunch": true
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "InternetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "AllowAllFromInternet": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "InternetRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0"
      },
      "DependsOn": [
        "VPCGatewayAttachment"
      ]
    },
    "InternetPrimarySubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "InternetRouteTable"
        },
        "SubnetId": {
          "Ref": "PrimarySubnet"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "fbfc0bca-c118-4f96-be58-746dc0867d96"
        }
      }
    }
  },
  "Parameters": {
    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.small"
    },
    "CidrBlock": {
      "Description": "CIDR Block for VPC",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "KeyName": {
      "Description": "The EC2 Key Pair to allow SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "ImageId": {
      "Description": "AMI for ec2 instance",
      "Type": "String"
    },
    "PrimaryAvailabilityZone": {
      "Description": "PrimaryAvailabilityZone for ec2",
      "Type": "String"
    },
    "PrimaryCidrBlock": {
      "Description": "primary cidr block",
      "Type": "String"
    }
  },
  "Outputs": {
    "PrimaryInstanceId": {
      "Description": "The Instance ID of primary instance",
      "Value": {
        "Ref": "PrimaryInstance"
      }
    },
    "PrimaryInstanceDnsName": {
      "Value": {
        "Fn::GetAtt": [
          "PrimaryInstance",
          "PublicDnsName"
        ]
      }
    },
    "PrimaryAvailabilityZone": {
      "Description": "Primary availability zone",
      "Value": {
        "Fn::GetAtt": [
          "PrimarySubnet",
          "AvailabilityZone"
        ]
      }
    }
  }
}